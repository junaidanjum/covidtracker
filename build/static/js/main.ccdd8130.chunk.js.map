{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","components/Charts/Charts.jsx","components/CountryPicker/CountryPicker.jsx","api/index.js","App.js","index.js","App.module.css","components/Charts/Charts.module.css","components/CountryPicker/CountryPicker.module.css","images/image.jpg"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","Counter","detail","start","end","value","duration","separator","className","styles","container","Grid","justify","item","xs","md","cx","card","infected","Card","CardContent","Typography","color","gutterBottom","variant","component","Date","toDateString","Charts","dailyData","thiscountry","slicedArray","length","slice","Math","max","lineChart","labels","map","date","datasets","label","borderColor","fill","backgroundColor","BarChart","options","legend","display","title","text","CountryPicker","country","handleCountry","FormControl","formcontrol","NativeSelect","onChange","e","target","i","name","key","url","fetchData","a","changedURL","axios","get","console","log","fetchDaily","modifiedData","total","reportDate","fetchCountry","countries","App","state","daily","fetchedData","setState","fetchedDaily","fetchedCountry","this","src","coronaImage","alt","image","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ccdd8130.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3VNcr\",\"card\":\"Cards_card__285o0\",\"infected\":\"Cards_infected__1ncyh\",\"recovered\":\"Cards_recovered__17pVo\",\"deaths\":\"Cards_deaths__24thr\"};","import React from 'react';\r\n\r\nimport { Grid, Card, CardContent, Typography } from '@material-ui/core'\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames'\r\n\r\nimport styles from './Cards.module.css'\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n\r\n    const Counter = ({ detail }) => {\r\n        return (\r\n            <CountUp\r\n                start={0}\r\n                end={detail.value}\r\n                duration={1.5}\r\n                separator=\",\" />\r\n        )\r\n    }\r\n    if (!confirmed) {\r\n        return 'Loading...'\r\n    }\r\n    else {\r\n        return (\r\n            <div className={styles.container}>\r\n                <Grid container justify=\"center\">\r\n                    <Grid item xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography color=\"textSecondary\" gutterBottom> Infected </Typography>\r\n                                <Typography variant=\"h5\" component=\"h2\"> <Counter detail={confirmed} /></Typography>\r\n                                <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                                <Typography variant=\"body2\" component=\"p\"> Number of active cases of COVID-19</Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography color=\"textSecondary\" gutterBottom> Recovered </Typography>\r\n                                <Typography variant=\"h5\" component=\"h2\"> <Counter detail={recovered} /></Typography>\r\n                                <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                                <Typography variant=\"body2\" component=\"p\"> Number of recoveries from COVID-19</Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography color=\"textSecondary\" gutterBottom> Deaths </Typography>\r\n                                <Typography variant=\"h5\" component=\"h2\"> <Counter detail={deaths} /> </Typography>\r\n                                <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                                <Typography variant=\"body2\" component=\"p\"> Number of deaths caused by COVID-19</Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Cards;","\r\nimport React from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2'\r\n\r\nimport styles from './Charts.module.css'\r\nconst Charts = ({dailyData, data, thiscountry}) => {\r\n    // console.log(dailyData)\r\n    const slicedArray = dailyData.length ? dailyData.slice(Math.max(dailyData.length - 100, 0)) : null\r\n    \r\n    const lineChart = (\r\n        dailyData.length ? (<Line\r\n            data={{\r\n                labels: slicedArray.map(({date}) => date),\r\n                datasets: [{\r\n                    data: slicedArray.map(({confirmed}) => confirmed),\r\n                    label: \"Infected\",\r\n                    borderColor: \"#3333ff\",\r\n                    fill: true\r\n                }, \r\n                {\r\n                    data: slicedArray.map(({deaths}) => deaths),\r\n                    label: \"Deaths\",\r\n                    borderColor: \"red\",\r\n                    backgroundColor: 'rgba(255,0,0,0.5',\r\n                    fill: true\r\n                }]\r\n            }}\r\n        />) : null\r\n    )\r\n\r\n    const BarChart = (data.confirmed) ? (\r\n        <Bar\r\n            data={{\r\n                labels: ['Infected', 'Recovered', 'Deaths'],\r\n                datasets: [{\r\n                    label: 'People',\r\n                    backgroundColor: ['blue', 'green', 'red'],\r\n                    data: [data.confirmed.value, data.recovered.value, data.deaths.value]\r\n                }]\r\n            }} \r\n            options= {{\r\n                legend: {display: false},\r\n                title: {display: true, text: `Current Situation in ${thiscountry}`}\r\n\r\n            }}\r\n        \r\n        />\r\n    ) : null\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {!(thiscountry) ? lineChart : BarChart}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Charts;","import React from 'react';\r\nimport { FormControl, NativeSelect } from '@material-ui/core'\r\n\r\nimport styles from './CountryPicker.module.css'\r\n\r\nconst CountryPicker = ({country, handleCountry}) => {\r\n    // console.log(\"Country\", country);\r\n    return (\r\n        <FormControl className={styles.formcontrol}> \r\n            <NativeSelect onChange={(e)=> handleCountry(e.target.value)}>\r\n                <option value=\"\"> Global </option>\r\n                {country.map(( country, i ) => <option value={country.name} key={i}> {country.name} </option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport default CountryPicker;","import axios from 'axios'\r\n\r\nconst url = 'https://covid19.mathdro.id/api'\r\n\r\nconst fetchData = async (country) => {\r\n    let changedURL = url;\r\n    if (country) {\r\n        changedURL = `${url}/countries/${country}`\r\n    }\r\n    try {\r\n        const {data : {confirmed, recovered, deaths, lastUpdate}}= await axios.get(changedURL);\r\n        return {confirmed, recovered, deaths, lastUpdate};\r\n    } catch (error) {\r\n        console.log(error)   \r\n    }\r\n}\r\n\r\nconst fetchDaily = async () => {\r\n try {\r\n    const { data } = await axios.get(`${url}/daily`)\r\n    const modifiedData = data.map((dailyData) => ({\r\n        confirmed: dailyData.confirmed.total,\r\n        deaths: dailyData.deaths.total,\r\n        date: dailyData.reportDate\r\n    }))\r\nreturn modifiedData;\r\n} catch (error) {\r\n     console.log(error)\r\n }\r\n}\r\n\r\nconst fetchCountry = async () => {\r\n    try {\r\n        const {data : {countries}} = await axios.get(`${url}/countries`)\r\n        return countries\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport { fetchData, fetchDaily, fetchCountry }","import React, { Component } from 'react';\r\n\r\nimport {Cards, Charts, CountryPicker } from './components'\r\nimport styles from './App.module.css'\r\nimport { fetchData, fetchDaily, fetchCountry } from './api/index'\r\nimport coronaImage from '../src/images/image.jpg'\r\n\r\n\r\nclass App extends Component {\r\n\r\n    state = {\r\n        data: {},\r\n        daily: {},\r\n        country: [],\r\n        thiscountry: ''\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedDaily = await fetchDaily();\r\n        const fetchedData = await fetchData();\r\n        const fetchedCountry = await fetchCountry();\r\n        // console.log(fetchedCountry);\r\n        this.setState({data: fetchedData, daily: fetchedDaily, country: fetchedCountry});\r\n    }\r\n\r\n    handleCountry = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n        console.log(fetchedData);\r\n        this.setState({data: fetchedData, thiscountry: country})\r\n    }\r\n\r\n    render() {\r\n        const { data, daily, country, thiscountry } = this.state;\r\n        console.log(this.state.thiscountry);\r\n        return (\r\n                <div className={styles.container}>\r\n                <img src={coronaImage} alt='COVID-19' className={styles.image}/>\r\n                <Cards data={data} />\r\n                <CountryPicker country={country} handleCountry={this.handleCountry}/>\r\n                <Charts dailyData={daily} data={data} thiscountry={thiscountry}/>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__18fAk\",\"image\":\"App_image__3B6Tu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__498BA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formcontrol\":\"CountryPicker_formcontrol__12LDh\"};","module.exports = __webpack_public_path__ + \"static/media/image.4732be2b.jpg\";"],"sourceRoot":""}